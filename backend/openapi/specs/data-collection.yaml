openapi: 3.0.3
info:
  title: Data Collection Service API
  description: |
    数据归集服务API，基于DataX实现多数据源的数据采集和归集功能。
    
    主要功能：
    - 多种数据源连接配置
    - DataX任务创建和管理
    - 数据同步任务执行
    - 任务监控和状态查询
    - 执行日志查看
  version: 1.0.0
  contact:
    name: Data Engine Platform Team
    email: dev@dataengine.com

servers:
  - url: http://localhost:8090/api/v1/collection
    description: Development server

tags:
  - name: DataSource
    description: 数据源管理
  - name: CollectionTask
    description: 数据归集任务
  - name: TaskExecution
    description: 任务执行管理
  - name: Monitor
    description: 监控和日志

paths:
  /datasources:
    get:
      tags: [DataSource]
      summary: 获取数据源列表
      description: 分页查询已配置的数据源
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
        - name: type
          in: query
          schema:
            $ref: '#/components/schemas/DataSourceType'
        - name: status
          in: query
          schema:
            type: string
            enum: [ACTIVE, INACTIVE]
      responses:
        '200':
          description: 数据源列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedDataSources'

    post:
      tags: [DataSource]
      summary: 创建数据源
      description: 配置新的数据源连接
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDataSourceRequest'
      responses:
        '201':
          description: 数据源创建成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceResponse'

  /datasources/{id}:
    get:
      tags: [DataSource]
      summary: 获取数据源详情
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 数据源详情
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceResponse'
        '404':
          description: 数据源不存在

    put:
      tags: [DataSource]
      summary: 更新数据源
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDataSourceRequest'
      responses:
        '200':
          description: 数据源更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceResponse'

    delete:
      tags: [DataSource]
      summary: 删除数据源
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 数据源删除成功

  /datasources/{id}/test:
    post:
      tags: [DataSource]
      summary: 测试数据源连接
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 连接测试结果
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConnectionTestResult'

  /tasks:
    get:
      tags: [CollectionTask]
      summary: 获取归集任务列表
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
        - name: status
          in: query
          schema:
            $ref: '#/components/schemas/TaskStatus'
        - name: name
          in: query
          description: 任务名称关键字搜索
          schema:
            type: string
      responses:
        '200':
          description: 归集任务列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedCollectionTasks'

    post:
      tags: [CollectionTask]
      summary: 创建归集任务
      description: 创建新的数据归集任务
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCollectionTaskRequest'
      responses:
        '201':
          description: 归集任务创建成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionTaskResponse'

  /tasks/{id}:
    get:
      tags: [CollectionTask]
      summary: 获取归集任务详情
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 归集任务详情
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionTaskResponse'

    put:
      tags: [CollectionTask]
      summary: 更新归集任务
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCollectionTaskRequest'
      responses:
        '200':
          description: 归集任务更新成功
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionTaskResponse'

    delete:
      tags: [CollectionTask]
      summary: 删除归集任务
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: 归集任务删除成功

  /tasks/{id}/execute:
    post:
      tags: [TaskExecution]
      summary: 执行归集任务
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: 任务执行已启动
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskExecutionResponse'

  /tasks/{id}/stop:
    post:
      tags: [TaskExecution]
      summary: 停止归集任务
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 任务停止成功

  /executions:
    get:
      tags: [TaskExecution]
      summary: 获取任务执行历史
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            default: 0
        - name: size
          in: query
          schema:
            type: integer
            default: 20
        - name: taskId
          in: query
          description: 按任务ID过滤
          schema:
            type: string
        - name: status
          in: query
          description: 按执行状态过滤
          schema:
            type: string
            enum: [RUNNING, SUCCESS, FAILED, STOPPED]
        - name: startTime
          in: query
          description: 开始时间过滤(ISO-8601格式)
          schema:
            type: string
            format: date-time
        - name: endTime
          in: query
          description: 结束时间过滤(ISO-8601格式)
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: 任务执行历史列表
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedTaskExecutions'

  /executions/{executionId}:
    get:
      tags: [TaskExecution]
      summary: 获取任务执行详情
      parameters:
        - name: executionId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 任务执行详情
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskExecutionDetail'

  /executions/{executionId}/logs:
    get:
      tags: [Monitor]
      summary: 获取任务执行日志
      parameters:
        - name: executionId
          in: path
          required: true
          schema:
            type: string
        - name: lines
          in: query
          description: 返回日志行数
          schema:
            type: integer
            default: 100
        - name: level
          in: query
          description: 日志级别过滤
          schema:
            type: string
            enum: [DEBUG, INFO, WARN, ERROR]
      responses:
        '200':
          description: 任务执行日志
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaskExecutionLogs'

  /monitor/statistics:
    get:
      tags: [Monitor]
      summary: 获取归集统计信息
      parameters:
        - name: period
          in: query
          description: 统计周期
          schema:
            type: string
            enum: [HOUR, DAY, WEEK, MONTH]
            default: DAY
      responses:
        '200':
          description: 归集统计信息
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionStatistics'

components:
  schemas:
    DataSourceType:
      type: string
      enum:
        - MYSQL
        - POSTGRESQL
        - ORACLE
        - SQLSERVER
        - MONGODB
        - REDIS
        - ELASTICSEARCH
        - HIVE
        - HDFS
        - KAFKA
        - HTTP
        - FILE

    TaskStatus:
      type: string
      enum:
        - DRAFT
        - READY
        - RUNNING
        - COMPLETED
        - FAILED
        - STOPPED

    DataSourceResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/DataSourceType'
        description:
          type: string
        config:
          type: object
          additionalProperties: true
        status:
          type: string
          enum: [ACTIVE, INACTIVE]
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreateDataSourceRequest:
      type: object
      required:
        - name
        - type
        - config
      properties:
        name:
          type: string
          description: 数据源名称
          minLength: 1
          maxLength: 100
        type:
          $ref: '#/components/schemas/DataSourceType'
        description:
          type: string
          description: 数据源描述
          maxLength: 500
        config:
          type: object
          description: 数据源连接配置
          additionalProperties: true

    UpdateDataSourceRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 500
        config:
          type: object
          additionalProperties: true

    ConnectionTestResult:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        latency:
          type: integer
          description: 连接延迟(ms)
        testedAt:
          type: string
          format: date-time

    CollectionTaskResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        sourceDataSourceId:
          type: string
        sourceDataSourceName:
          type: string
        targetDataSourceId:
          type: string
        targetDataSourceName:
          type: string
        config:
          type: object
          additionalProperties: true
        status:
          $ref: '#/components/schemas/TaskStatus'
        scheduleExpression:
          type: string
          description: Cron调度表达式
        lastExecutionId:
          type: string
          description: 最后执行ID
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    CreateCollectionTaskRequest:
      type: object
      required:
        - name
        - sourceDataSourceId
        - targetDataSourceId
        - config
      properties:
        name:
          type: string
          description: 任务名称
          minLength: 1
          maxLength: 100
        description:
          type: string
          description: 任务描述
          maxLength: 500
        sourceDataSourceId:
          type: string
          description: 源数据源ID
        targetDataSourceId:
          type: string
          description: 目标数据源ID
        config:
          type: object
          description: 归集配置
          additionalProperties: true
        scheduleExpression:
          type: string
          description: Cron调度表达式

    UpdateCollectionTaskRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          maxLength: 100
        description:
          type: string
          maxLength: 500
        config:
          type: object
          additionalProperties: true
        scheduleExpression:
          type: string

    TaskExecutionResponse:
      type: object
      properties:
        executionId:
          type: string
        taskId:
          type: string
        status:
          type: string
          enum: [RUNNING, SUCCESS, FAILED, STOPPED]
        startedAt:
          type: string
          format: date-time

    TaskExecutionDetail:
      type: object
      properties:
        executionId:
          type: string
        taskId:
          type: string
        taskName:
          type: string
        status:
          type: string
          enum: [RUNNING, SUCCESS, FAILED, STOPPED]
        progress:
          type: number
          format: double
          minimum: 0
          maximum: 100
        recordsTotal:
          type: integer
          format: int64
        recordsProcessed:
          type: integer
          format: int64
        recordsSuccess:
          type: integer
          format: int64
        recordsFailed:
          type: integer
          format: int64
        throughput:
          type: number
          format: double
          description: 处理速度(记录/秒)
        startedAt:
          type: string
          format: date-time
        completedAt:
          type: string
          format: date-time
        errorMessage:
          type: string
        config:
          type: object
          additionalProperties: true

    TaskExecutionLogs:
      type: object
      properties:
        executionId:
          type: string
        logs:
          type: array
          items:
            $ref: '#/components/schemas/LogEntry'
        totalLines:
          type: integer

    LogEntry:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        level:
          type: string
          enum: [DEBUG, INFO, WARN, ERROR]
        message:
          type: string
        thread:
          type: string
        logger:
          type: string

    CollectionStatistics:
      type: object
      properties:
        period:
          type: string
          enum: [HOUR, DAY, WEEK, MONTH]
        totalTasks:
          type: integer
        activeTasks:
          type: integer
        totalExecutions:
          type: integer
        successfulExecutions:
          type: integer
        failedExecutions:
          type: integer
        totalRecordsProcessed:
          type: integer
          format: int64
        avgExecutionTime:
          type: number
          format: double
          description: 平均执行时间(秒)
        avgThroughput:
          type: number
          format: double
          description: 平均吞吐量(记录/秒)
        topDataSources:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceUsage'
        executionTrend:
          type: array
          items:
            $ref: '#/components/schemas/ExecutionTrendPoint'

    DataSourceUsage:
      type: object
      properties:
        dataSourceId:
          type: string
        dataSourceName:
          type: string
        type:
          $ref: '#/components/schemas/DataSourceType'
        taskCount:
          type: integer
        executionCount:
          type: integer
        recordsProcessed:
          type: integer
          format: int64

    ExecutionTrendPoint:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        executionCount:
          type: integer
        successCount:
          type: integer
        failureCount:
          type: integer
        recordsProcessed:
          type: integer
          format: int64

    PagedDataSources:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/DataSourceResponse'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
        size:
          type: integer
        number:
          type: integer
        first:
          type: boolean
        last:
          type: boolean

    PagedCollectionTasks:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/CollectionTaskResponse'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
        size:
          type: integer
        number:
          type: integer
        first:
          type: boolean
        last:
          type: boolean

    PagedTaskExecutions:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/TaskExecutionDetail'
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
        size:
          type: integer
        number:
          type: integer
        first:
          type: boolean
        last:
          type: boolean
