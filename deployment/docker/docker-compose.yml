version: '3.8'

services:
  # API网关
  api-gateway:
    image: data-engine/api-gateway:latest
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka:8761/eureka
    depends_on:
      - eureka
      - redis
      - mysql

  # 服务注册中心
  eureka:
    image: data-engine/eureka-server:latest
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  # 数据管理服务
  data-management-service:
    image: data-engine/data-management-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/knowledge_base
      - SPRING_DATASOURCE_USERNAME=knowledge_user
      - SPRING_DATASOURCE_PASSWORD=knowledge_password
      - SPRING_REDIS_HOST=redis
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka:8761/eureka
    depends_on:
      - mysql
      - redis
      - eureka

  # 算子市场服务
  operator-market-service:
    image: data-engine/operator-market-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/dataengine
      - SPRING_REDIS_HOST=redis
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka:8761/eureka
    depends_on:
      - mysql
      - redis
      - eureka

  # 执行引擎服务
  execution-engine-service:
    image: data-engine/execution-engine-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/dataengine
      - SPRING_REDIS_HOST=redis
      - RAY_HEAD_SERVICE_HOST=ray-head
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://eureka:8761/eureka
    depends_on:
      - mysql
      - redis
      - ray-head
      - eureka

  # 前端控制台
  console:
    image: data-engine/console:latest
    ports:
      - "3000:3000"
    environment:
      - API_BASE_URL=http://api-gateway:8080
    depends_on:
      - api-gateway

  # 数据库
  mysql:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: knowledge_base
      MYSQL_USER: knowledge_user
      MYSQL_PASSWORD: knowledge_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/db/init.sql:/docker-entrypoint-initdb.d/init.sql

  # 缓存
  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # 搜索引擎
  elasticsearch:
    image: elasticsearch:7.17.0
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - es_data:/usr/share/elasticsearch/data

  # 对象存储
  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: admin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  # Ray集群头节点
  ray-head:
    image: data-engine/python-executor:latest
    ports:
      - "8265:8265"
      - "10001:10001"
    command: ray start --head --dashboard-host=0.0.0.0 --dashboard-port=8265 --block
    volumes:
      - ./runtime/operators:/opt/operators

  # Ray工作节点
  ray-worker:
    image: data-engine/python-executor:latest
    command: ray start --address=ray-head:10001 --block
    depends_on:
      - ray-head
    deploy:
      replicas: 2

  # 监控
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources

volumes:
  mysql_data:
  redis_data:
  es_data:
  minio_data:
  prometheus_data:
  grafana_data:

networks:
  default:
    name: data-engine-network
