<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.dataengine.collection.infrastructure.persistence.mapper.TaskScheduleMapper">

    <!-- Result Map -->
    <resultMap id="TaskScheduleResultMap" type="com.dataengine.collection.domain.model.TaskSchedule">
        <id property="id" column="id"/>
        <result property="taskId" column="task_id"/>
        <result property="cronExpression" column="cron_expression"/>
        <result property="timezone" column="timezone"/>
        <result property="enabled" column="enabled"/>
        <result property="nextExecutionTime" column="next_execution_time"/>
        <result property="lastExecutionTime" column="last_execution_time"/>
        <result property="executionCount" column="execution_count"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <!-- Base Column List -->
    <sql id="Base_Column_List">
        id, task_id, cron_expression, timezone, enabled, next_execution_time,
        last_execution_time, execution_count, created_at, updated_at
    </sql>

    <!-- Insert -->
    <insert id="insert" parameterType="com.dataengine.collection.domain.model.TaskSchedule">
        INSERT INTO t_dc_task_schedules (
            id, task_id, cron_expression, timezone, enabled, next_execution_time,
            last_execution_time, execution_count, created_at, updated_at
        ) VALUES (
            #{id}, #{taskId}, #{cronExpression}, #{timezone}, #{enabled}, #{nextExecutionTime},
            #{lastExecutionTime}, #{executionCount}, #{createdAt}, #{updatedAt}
        )
    </insert>

    <!-- Update -->
    <update id="update" parameterType="com.dataengine.collection.domain.model.TaskSchedule">
        UPDATE t_dc_task_schedules 
        SET cron_expression = #{cronExpression},
            timezone = #{timezone},
            enabled = #{enabled},
            next_execution_time = #{nextExecutionTime},
            last_execution_time = #{lastExecutionTime},
            execution_count = #{executionCount},
            updated_at = #{updatedAt}
        WHERE id = #{id}
    </update>

    <!-- Delete by ID -->
    <delete id="deleteById" parameterType="java.lang.String">
        DELETE FROM t_dc_task_schedules WHERE id = #{id}
    </delete>

    <!-- Delete by Task ID -->
    <delete id="deleteByTaskId" parameterType="java.lang.String">
        DELETE FROM t_dc_task_schedules WHERE task_id = #{taskId}
    </delete>

    <!-- Select by ID -->
    <select id="selectById" parameterType="java.lang.String" resultMap="TaskScheduleResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_dc_task_schedules
        WHERE id = #{id}
    </select>

    <!-- Select by Task ID -->
    <select id="selectByTaskId" parameterType="java.lang.String" resultMap="TaskScheduleResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_dc_task_schedules
        WHERE task_id = #{taskId}
    </select>

    <!-- Select Enabled Schedules -->
    <select id="selectEnabledSchedules" resultMap="TaskScheduleResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_dc_task_schedules
        WHERE enabled = true
        ORDER BY next_execution_time ASC
    </select>

    <!-- Select Due Schedules -->
    <select id="selectDueSchedules" resultMap="TaskScheduleResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_dc_task_schedules
        WHERE enabled = true 
          AND next_execution_time &lt;= #{currentTime}
        ORDER BY next_execution_time ASC
    </select>

    <!-- Select All with Pagination -->
    <select id="selectAll" resultMap="TaskScheduleResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM t_dc_task_schedules
        <where>
            <if test="enabled != null">
                AND enabled = #{enabled}
            </if>
            <if test="taskId != null and taskId != ''">
                AND task_id = #{taskId}
            </if>
        </where>
        ORDER BY created_at DESC
        <if test="offset != null and limit != null">
            LIMIT #{offset}, #{limit}
        </if>
    </select>

    <!-- Count Total -->
    <select id="count" resultType="java.lang.Long">
        SELECT COUNT(*)
        FROM t_dc_task_schedules
        <where>
            <if test="enabled != null">
                AND enabled = #{enabled}
            </if>
            <if test="taskId != null and taskId != ''">
                AND task_id = #{taskId}
            </if>
        </where>
    </select>

    <!-- Update Next Execution Time -->
    <update id="updateNextExecutionTime">
        UPDATE t_dc_task_schedules 
        SET next_execution_time = #{nextExecutionTime},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- Update Last Execution -->
    <update id="updateLastExecution">
        UPDATE t_dc_task_schedules 
        SET last_execution_time = #{lastExecutionTime},
            execution_count = execution_count + 1,
            updated_at = NOW()
        WHERE id = #{id}
    </update>

    <!-- Enable/Disable Schedule -->
    <update id="updateEnabled">
        UPDATE t_dc_task_schedules 
        SET enabled = #{enabled},
            updated_at = NOW()
        WHERE id = #{id}
    </update>

</mapper>