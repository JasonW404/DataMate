services:
  adapter:
    build: .
    ports:
      - "${PORT:-8000}:8000"
    environment:
      MYSQL_HOST: adapter-db
      MYSQL_PORT: 3306
      MYSQL_USER: ${MYSQL_USER:-label_studio_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-user_password}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-label_studio_adapter}

      LABEL_STUDIO_BASE_URL: ${LABEL_STUDIO_BASE_URL}
      DM_SERVICE_BASE_URL: ${DM_SERVICE_BASE_URL}
      
      DEBUG: ${DEBUG:-true}
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-here}
    depends_on:
      adapter-db:
        condition: service_healthy
    networks:
      - adapter_network
    volumes:
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  adapter-db:
    image: mysql:8
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: ${MYSQL_DATABASE:-label_studio_adapter}
      MYSQL_USER: ${MYSQL_USER:-label_studio_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-user_password}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init-db-mysql.sql:/docker-entrypoint-initdb.d/init.sql
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --default-time-zone=+08:00
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "root",
          "-proot_password",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - adapter_network

volumes:
  mysql_data:

networks:
  adapter_network:
    driver: bridge
